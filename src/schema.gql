# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  fullName: String!
  roles: [String!]!
  isActive: String!
  email: String!
  lastUpdateBy: User
  reclamos: [Reclamo!]!
}

type Reclamo {
  id: Float!
  title: String!
  detail: String!
  problem: String!
  isActive: Boolean!
  user: User!
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  reclamos(roles: [ValidRoles!] = [], offset: Int = 0, limit: Int = 5): [Reclamo!]!
  reclamoPorId(id: Float!): Reclamo!
  ReclamosPorCoincidencia(text: String!): [Reclamo!]!
  users(roles: [ValidRoles!] = [], offset: Int = 0, limit: Int = 5): [User!]!
  user(id: ID!): User!
  revalite: AuthResponse!
}

enum ValidRoles {
  admin
  user
  superUser
}

type Mutation {
  createReclamo(createReclamoInput: createReclamoInput!): Reclamo!
  updateReclamo(updateReclamoInput: updateReclamoInput!): Reclamo!
  deleteReclamo(id: Int!): Reclamo!
  blockUser(id: ID!): User!
  activeUser(id: ID!): User!
  signup(signupInput: SignupInput!): AuthResponse!
  login(loginInput: LoginInput!): AuthResponse!

  """Ejecuta la construccion de la base de datos"""
  executeSeed: Boolean!
}

input createReclamoInput {
  title: String!
  purchaseDate: String!
  purchaseId: Float!
  productCode: String!
  problem: String!
}

input updateReclamoInput {
  id: Float!
  title: String
  detail: String
  problem: String
  isActive: Boolean
}

input SignupInput {
  email: String!
  fullName: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}